name: Docker Image CI py-rocket-geospatial
env:
  IMAGE_NAME: py-rocket-geospatial
  IMAGE_TAG: 4.4-3.10
  
on:
  workflow_dispatch: null
  push:
    branches: main
    paths: 
      - 'images/py-rocket-geospatial/**'
      - '.github/workflows/docker-image-py-rocket-geospatial.yml'
      - '.github/workflows/docker-image-py-rocket-base.yml'
jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        if: github.repository == 'nmfs-opensci/container-images'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Build the Docker image
        if: github.repository == 'nmfs-opensci/container-images'
        run: |
          docker build images/$IMAGE_NAME -f images/$IMAGE_NAME/Dockerfile  --tag ghcr.io/nmfs-opensci/container-images/$IMAGE_NAME:$IMAGE_TAG --tag ghcr.io/nmfs-opensci/container-images/$IMAGE_NAME:latest
      - name: Publish
        if: github.repository == 'nmfs-opensci/container-images'
        run: |
          docker push ghcr.io/nmfs-opensci/container-images/$IMAGE_NAME:$IMAGE_TAG
          docker push ghcr.io/nmfs-opensci/container-images/$IMAGE_NAME:latest
          
      # - name: Build Multi-Arch Docker image (broke)
      #   if: github.repository == 'nmfs-opensci/container-images'
      #   run: |
      #     docker buildx create \
      #       --name container \
      #       --driver=docker-container
      #     docker buildx build \
      #       --platform linux/amd64,linux/arm64 \
      #       --builder container images/$IMAGE_NAME \
      #       -f images/$IMAGE_NAME/Dockerfile \
      #       --tag ghcr.io/nmfs-opensci/container-images/$IMAGE_NAME:$IMAGE_TAG \
      #       --tag ghcr.io/nmfs-opensci/container-images/$IMAGE_NAME:latest \
      #       --push
