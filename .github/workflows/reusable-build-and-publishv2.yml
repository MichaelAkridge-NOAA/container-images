name: v2 ♻️ Reusable - 🚀 Build and Publish Docker Images
on:
  workflow_call:
    inputs:
      artifact_name:
        required: true
        type: string
      repository:
        required: true
        type: string
jobs:
  download-artifact:
    runs-on: ubuntu-latest
    outputs:
      paths: ${{ steps.read-paths.outputs.paths }}
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: .

      - name: Read paths and set output
        id: read-paths
        run: |
          paths=$(cat dockerfile_paths.json)
          paths_serialized=$(echo $paths | jq -c .)
          echo "paths=${paths_serialized}" >> $GITHUB_OUTPUT
        shell: bash

  build-and-push:
    runs-on: ubuntu-latest
    needs: download-artifact
    permissions: write-all
    strategy:
      matrix:
        folder: ${{ fromJson(needs.download-artifact.outputs.paths) }}
    steps:
      - uses: actions/checkout@v4

      - name: Set lower case owner name
        run: echo "OWNER_LC=${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]' | awk -F "=" '{print "OWNER_LC="$2}' >> $GITHUB_ENV

      - name: Initialize VERSION file if it doesn't exist
        run: |
          VERSION_FILE=${{ matrix.folder }}/VERSION
          if [ ! -f "$VERSION_FILE" ]; then
            echo "1.0.0" > $VERSION_FILE
          fi

      - name: Get version
        id: get_version
        run: echo "VERSION=$(cat ${{ matrix.folder }}/VERSION)" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=$(basename ${{ matrix.folder }})
          echo "Building and pushing $IMAGE_NAME"
          docker build ${{ matrix.folder }} -f ${{ matrix.folder }}/Dockerfile --tag ghcr.io/${OWNER_LC}/${IMAGE_NAME}:latest --tag ghcr.io/${OWNER_LC}/${IMAGE_NAME}:${{ env.VERSION }} --tag ghcr.io/${OWNER_LC}/${IMAGE_NAME}:${{ github.sha }}
          docker push ghcr.io/${OWNER_LC}/${IMAGE_NAME}:latest
          docker push ghcr.io/${OWNER_LC}/${IMAGE_NAME}:${{ env.VERSION }}
          docker push ghcr.io/${OWNER_LC}/${IMAGE_NAME}:${{ github.sha }}

      - name: Install bumpversion
        run: pip install bumpversion

      - name: Configure Git
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      #- name: Debug - List directory contents
      #  run: ls -R

      - name: Debug - Show VERSION file content before bumpversion
        run: cat ${{ matrix.folder }}/VERSION

      - name: Bump version and push tag
        run: |
          bumpversion patch --current-version $(cat ${{ matrix.folder }}/VERSION) --allow-dirty --config-file .bumpversion.cfg
          NEW_VERSION=$(cat ${{ matrix.folder }}/VERSION)
          echo "New version is $NEW_VERSION"
          git add ${{ matrix.folder }}/VERSION
          git commit -m "Bump version for ${{ matrix.folder }} to $NEW_VERSION"
          git tag -a "${{ matrix.folder }}-v$NEW_VERSION" -m "Version $NEW_VERSION for ${{ matrix.folder }}"
          git push origin --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug - Show VERSION file content after bumpversion
        run: cat ${{ matrix.folder }}/VERSION
